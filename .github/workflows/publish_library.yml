name: "Publish library to GitHub Packages"
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    name: create release
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: copy pgp
        id: write_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}'
          encodedString: ${{ secrets.SORROW_BLUE_XXXXXXXX_SECRET }}
      - name: echo
        run: echo ${{ steps.write_file.outputs.filePath }}
      - name: Build with Gradle
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ steps.write_file.outputs.filePath }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
        run: ./gradlew binding-ktx:publishReleasePublicationToSonatypeRepository binding-ktx:publishReleasePublicationToGitHubPackagesRepository binding-ktx:closeAndReleaseRepository

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Get commit summary
        id: get_commit_summary
        run: |
          PREVIOUS_TAG=$(git tag --sort=-creatordate | sed -n 2p)
          echo "PREVIOUS_TAG: $PREVIOUS_TAG"
          COMMIT_SUMMARY="$(git log --oneline --pretty=tformat:"%h %s" $PREVIOUS_TAG..${{ github.ref }})"
          COMMIT_SUMMARY="${COMMIT_SUMMARY//$'\n'/'%0A'}"
          echo ::set-output name=COMMIT_SUMMARY::$COMMIT_SUMMARY

      - name: create release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ${{ steps.get_commit_summary.outputs.COMMIT_SUMMARY }}
          draft: false
          prerelease: false
